/* tslint:disable */
/* eslint-disable */
/**
 * Goovi ID
 * GOOVI ID Website spec
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { TeamSnippet } from './TeamSnippet';
import {
    TeamSnippetFromJSON,
    TeamSnippetFromJSONTyped,
    TeamSnippetToJSON,
} from './TeamSnippet';
import type { UserSnippet } from './UserSnippet';
import {
    UserSnippetFromJSON,
    UserSnippetFromJSONTyped,
    UserSnippetToJSON,
} from './UserSnippet';

/**
 * 
 * @export
 * @interface TeamMember
 */
export interface TeamMember {
    /**
     * 
     * @type {Date}
     * @memberof TeamMember
     */
    joinAt?: Date;
    /**
     * 
     * @type {Array<string>}
     * @memberof TeamMember
     */
    roles?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof TeamMember
     */
    roleLabel?: Array<string>;
    /**
     * 
     * @type {TeamSnippet}
     * @memberof TeamMember
     */
    team?: TeamSnippet;
    /**
     * 
     * @type {UserSnippet}
     * @memberof TeamMember
     */
    user?: UserSnippet;
}

/**
 * Check if a given object implements the TeamMember interface.
 */
export function instanceOfTeamMember(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TeamMemberFromJSON(json: any): TeamMember {
    return TeamMemberFromJSONTyped(json, false);
}

export function TeamMemberFromJSONTyped(json: any, ignoreDiscriminator: boolean): TeamMember {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'joinAt': !exists(json, 'joinAt') ? undefined : (new Date(json['joinAt'])),
        'roles': !exists(json, 'roles') ? undefined : json['roles'],
        'roleLabel': !exists(json, 'roleLabel') ? undefined : json['roleLabel'],
        'team': !exists(json, 'team') ? undefined : TeamSnippetFromJSON(json['team']),
        'user': !exists(json, 'user') ? undefined : UserSnippetFromJSON(json['user']),
    };
}

export function TeamMemberToJSON(value?: TeamMember | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'joinAt': value.joinAt === undefined ? undefined : (value.joinAt.toISOString()),
        'roles': value.roles,
        'roleLabel': value.roleLabel,
        'team': TeamSnippetToJSON(value.team),
        'user': UserSnippetToJSON(value.user),
    };
}

