/* tslint:disable */
/* eslint-disable */
/**
 * Goovi ID
 * GOOVI ID Website spec
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { TeamMember } from './TeamMember';
import {
    TeamMemberFromJSON,
    TeamMemberFromJSONTyped,
    TeamMemberToJSON,
} from './TeamMember';

/**
 * 
 * @export
 * @interface TeamInvitation
 */
export interface TeamInvitation {
    /**
     * 
     * @type {string}
     * @memberof TeamInvitation
     */
    teamID?: string;
    /**
     * 
     * @type {string}
     * @memberof TeamInvitation
     */
    memberId?: string;
    /**
     * 
     * @type {string}
     * @memberof TeamInvitation
     */
    invitationID?: string;
    /**
     * 
     * @type {Date}
     * @memberof TeamInvitation
     */
    invitationAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof TeamInvitation
     */
    status?: string;
    /**
     * 
     * @type {TeamMember}
     * @memberof TeamInvitation
     */
    member?: TeamMember;
}

/**
 * Check if a given object implements the TeamInvitation interface.
 */
export function instanceOfTeamInvitation(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TeamInvitationFromJSON(json: any): TeamInvitation {
    return TeamInvitationFromJSONTyped(json, false);
}

export function TeamInvitationFromJSONTyped(json: any, ignoreDiscriminator: boolean): TeamInvitation {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'teamID': !exists(json, 'teamID') ? undefined : json['teamID'],
        'memberId': !exists(json, 'member_id') ? undefined : json['member_id'],
        'invitationID': !exists(json, 'invitationID') ? undefined : json['invitationID'],
        'invitationAt': !exists(json, 'invitationAt') ? undefined : (new Date(json['invitationAt'])),
        'status': !exists(json, 'status') ? undefined : json['status'],
        'member': !exists(json, 'member') ? undefined : TeamMemberFromJSON(json['member']),
    };
}

export function TeamInvitationToJSON(value?: TeamInvitation | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'teamID': value.teamID,
        'member_id': value.memberId,
        'invitationID': value.invitationID,
        'invitationAt': value.invitationAt === undefined ? undefined : (value.invitationAt.toISOString()),
        'status': value.status,
        'member': TeamMemberToJSON(value.member),
    };
}

