/* tslint:disable */
/* eslint-disable */
/**
 * Goovi ID
 * GOOVI ID Website spec
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { UserSnippet } from './UserSnippet';
import {
    UserSnippetFromJSON,
    UserSnippetFromJSONTyped,
    UserSnippetToJSON,
} from './UserSnippet';

/**
 * 
 * @export
 * @interface LoginResponse
 */
export interface LoginResponse {
    /**
     * 
     * @type {UserSnippet}
     * @memberof LoginResponse
     */
    userdata?: UserSnippet;
    /**
     * 
     * @type {string}
     * @memberof LoginResponse
     */
    token?: string;
    /**
     * 
     * @type {string}
     * @memberof LoginResponse
     */
    refresh?: string;
    /**
     * 
     * @type {string}
     * @memberof LoginResponse
     */
    teamID?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof LoginResponse
     */
    teamRoles?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof LoginResponse
     */
    roles?: Array<string>;
}

/**
 * Check if a given object implements the LoginResponse interface.
 */
export function instanceOfLoginResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function LoginResponseFromJSON(json: any): LoginResponse {
    return LoginResponseFromJSONTyped(json, false);
}

export function LoginResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): LoginResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'userdata': !exists(json, 'userdata') ? undefined : UserSnippetFromJSON(json['userdata']),
        'token': !exists(json, 'token') ? undefined : json['token'],
        'refresh': !exists(json, 'refresh') ? undefined : json['refresh'],
        'teamID': !exists(json, 'teamID') ? undefined : json['teamID'],
        'teamRoles': !exists(json, 'teamRoles') ? undefined : json['teamRoles'],
        'roles': !exists(json, 'roles') ? undefined : json['roles'],
    };
}

export function LoginResponseToJSON(value?: LoginResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'userdata': UserSnippetToJSON(value.userdata),
        'token': value.token,
        'refresh': value.refresh,
        'teamID': value.teamID,
        'teamRoles': value.teamRoles,
        'roles': value.roles,
    };
}

